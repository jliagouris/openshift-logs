---
# tasks file for kube_head

- name: create Docker config directory
  file: path=/etc/docker state=directory

- name: changing Docker to systemd driver
  copy:
    dest: "/etc/docker/daemon.json"
    content:
      {
      "exec-opts": ["native.cgroupdriver=systemd"]
      }

- name: install Docker
  apt:
    name: docker.io
    state: present
    update_cache: true

- name: install Docker
  apt:
    name: docker.io
    state: present
    update_cache: true

- name: install APT Transport HTTPS
  apt:
    name: apt-transport-https
    state: present

- name: add Kubernetes apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add Kubernetes' APT repository
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: 'kubernetes'

- name: install kubelet
  apt:
    name: kubelet
    state: present
    update_cache: true

- name: install kubeadm
  apt:
    name: kubeadm
    state: present

- name: install kubectl
  apt:
    name: kubectl
    state: present
    force: yes

- name: initialize the cluster
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt # to use vars follow `--pod-network-cidr={{ pod_cidr_network }}`
  args:
    chdir: $HOME
    creates: cluster_initialized.txt

- name: create .kube directory
  become: true
  become_user: cc # have to add default user for different clouds in the `k8s-cluster-init.yaml`
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/cc/.kube/config
    remote_src: yes
    owner: cc

- name: install Pod network
  become: true
  become_user: cc
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt
  args:
    chdir: $HOME
    creates: pod_network_setup.txt

- name: get join command
  shell: kubeadm token create --print-join-command
  register: join_command_raw

- name: set join command
  set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"